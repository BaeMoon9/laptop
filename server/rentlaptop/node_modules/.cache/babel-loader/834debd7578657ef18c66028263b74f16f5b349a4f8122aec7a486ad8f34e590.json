{"ast":null,"code":"var _jsxFileName = \"/home/bae/laptop/server/rentlaptop/src/pages/test1.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test1() {\n  var _s = $RefreshSig$();\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n  function Items({\n    currentItems\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n  function PaginatedItems({\n    itemsPerPage\n  }) {\n    _s();\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    // Simulate fetching items from another resources.\n    // (This could be items from props; or items loaded in a local state\n    // from an API endpoint with useEffect and useState)\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    const currentItems = items.slice(itemOffset, endOffset);\n    const pageCount = Math.ceil(items.length / itemsPerPage);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  _s(PaginatedItems, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"d\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 2\n  }, this);\n}\n_c = Test1;\nexport default Test1;\nvar _c;\n$RefreshReg$(_c, \"Test1\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","ReactPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","Test1","_s","$RefreshSig$","items","Items","currentItems","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","PaginatedItems","itemsPerPage","itemOffset","setItemOffset","endOffset","console","log","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","_c","$RefreshReg$"],"sources":["/home/bae/laptop/server/rentlaptop/src/pages/test1.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\n\nfunction Test1() {\n\n\t\n\tconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nfunction Items({ currentItems }) {\n  return (\n    <>\n      {currentItems &&\n        currentItems.map((item) => (\n          <div>\n            <h3>Item #{item}</h3>\n          </div>\n        ))}\n    </>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage }) {\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n  const endOffset = itemOffset + itemsPerPage;\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % items.length;\n    console.log(\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} />\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nreturn(\n\t<div>\n\t\td\n\t</div>\n)\n}\n\nexport default Test1;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,KAAKA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAGhB,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAE9D,SAASC,KAAKA,CAAC;IAAEC;EAAa,CAAC,EAAE;IAC/B,oBACER,OAAA,CAAAE,SAAA;MAAAO,QAAA,EACGD,YAAY,IACXA,YAAY,CAACE,GAAG,CAAEC,IAAI,iBACpBX,OAAA;QAAAS,QAAA,eACET,OAAA;UAAAS,QAAA,GAAI,QAAM,EAACE,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACN;IAAC,gBACJ,CAAC;EAEP;EAEA,SAASC,cAAcA,CAAC;IAAEC;EAAa,CAAC,EAAE;IAAAb,EAAA;IACxC;IACA;IACA,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;;IAE/C;IACA;IACA;IACA,MAAMwB,SAAS,GAAGF,UAAU,GAAGD,YAAY;IAC3CI,OAAO,CAACC,GAAG,CAAE,sBAAqBJ,UAAW,OAAME,SAAU,EAAC,CAAC;IAC/D,MAAMZ,YAAY,GAAGF,KAAK,CAACiB,KAAK,CAACL,UAAU,EAAEE,SAAS,CAAC;IACvD,MAAMI,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACpB,KAAK,CAACqB,MAAM,GAAGV,YAAY,CAAC;;IAExD;IACA,MAAMW,eAAe,GAAIC,KAAK,IAAK;MACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGd,YAAY,GAAIX,KAAK,CAACqB,MAAM;MAChEN,OAAO,CAACC,GAAG,CACR,8BAA6BO,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAC7E,CAAC;MACDX,aAAa,CAACW,SAAS,CAAC;IAC1B,CAAC;IAED,oBACE9B,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACET,OAAA,CAACO,KAAK;QAACC,YAAY,EAAEA;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCf,OAAA,CAACF,aAAa;QACZkC,UAAU,EAAC,KAAK;QAChBC,SAAS,EAAC,QAAQ;QAClBC,YAAY,EAAEN,eAAgB;QAC9BO,kBAAkB,EAAE,CAAE;QACtBX,SAAS,EAAEA,SAAU;QACrBY,aAAa,EAAC,YAAY;QAC1BC,qBAAqB,EAAE;MAAK;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA,eACF,CAAC;EAEP;EAACX,EAAA,CApCQY,cAAc;EAsCvB,oBACChB,OAAA;IAAAS,QAAA,EAAK;EAEL;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEP;AAACuB,EAAA,GA7DQnC,KAAK;AA+Dd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}